{
  "securityDefinitions": {
    "Bearer": {
      "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/api/users/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "responses": {
          "422": {
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            },
            "description": "Validation errors"
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            },
            "description": "User created successfully"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/UserRegistration"
            },
            "required": true,
            "name": "user",
            "in": "body",
            "description": "User registration details"
          }
        ],
        "operationId": "RephiWeb.AuthController.register",
        "description": "Creates a new user account and returns authentication token",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/api/users/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "responses": {
          "401": {
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "description": "Invalid credentials"
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            },
            "description": "Login successful"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/LoginCredentials"
            },
            "required": true,
            "name": "credentials",
            "in": "body",
            "description": "Login credentials"
          }
        ],
        "operationId": "RephiWeb.AuthController.login",
        "description": "Authenticates user credentials and returns authentication token",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/api/me": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get current user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/UserResponse"
            },
            "description": "User information"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "operationId": "RephiWeb.AuthController.me",
        "description": "Returns the current authenticated user's information"
      }
    }
  },
  "swagger": "2.0",
  "definitions": {
    "UserResponse": {
      "example": {
        "user": {
          "email": "user@example.com",
          "id": 1
        }
      },
      "properties": {
        "user": {
          "properties": {
            "email": {
              "description": "User's email address",
              "type": "string"
            },
            "id": {
              "description": "User ID",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "user"
      ],
      "title": "User Response",
      "description": "User information response",
      "type": "object"
    },
    "ErrorResponse": {
      "example": {
        "error": "Invalid email or password"
      },
      "properties": {
        "error": {
          "description": "Error message",
          "type": "string"
        }
      },
      "required": [
        "error"
      ],
      "title": "Error Response",
      "description": "Error response",
      "type": "object"
    },
    "LoginCredentials": {
      "example": {
        "email": "user@example.com",
        "password": "securepassword123"
      },
      "properties": {
        "email": {
          "description": "User's email address",
          "format": "email",
          "type": "string"
        },
        "password": {
          "description": "User's password",
          "type": "string"
        }
      },
      "required": [
        "email",
        "password"
      ],
      "title": "Login Credentials",
      "description": "User login credentials",
      "type": "object"
    },
    "ValidationErrors": {
      "example": {
        "errors": {
          "email": [
            "can't be blank"
          ],
          "password": [
            "should be at least 8 character(s)"
          ]
        }
      },
      "properties": {
        "errors": {
          "description": "Validation error messages",
          "type": "object"
        }
      },
      "required": [
        "errors"
      ],
      "title": "Validation Errors",
      "description": "Validation error response",
      "type": "object"
    },
    "AuthResponse": {
      "example": {
        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
        "user": {
          "email": "user@example.com",
          "id": 1
        }
      },
      "properties": {
        "token": {
          "description": "JWT authentication token",
          "type": "string"
        },
        "user": {
          "properties": {
            "email": {
              "description": "User's email address",
              "type": "string"
            },
            "id": {
              "description": "User ID",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "user",
        "token"
      ],
      "title": "Authentication Response",
      "description": "Successful authentication response",
      "type": "object"
    },
    "UserRegistration": {
      "example": {
        "email": "user@example.com",
        "password": "securepassword123"
      },
      "properties": {
        "email": {
          "description": "User's email address",
          "format": "email",
          "type": "string"
        },
        "password": {
          "minLength": 8,
          "description": "User's password",
          "type": "string"
        }
      },
      "required": [
        "email",
        "password"
      ],
      "title": "User Registration",
      "description": "New user registration data",
      "type": "object"
    }
  },
  "host": "localhost:4000",
  "info": {
    "title": "Rephi API",
    "description": "Phoenix/Elixir backend with JWT authentication and real-time WebSocket communication",
    "version": "1.0"
  }
}