{
  "securityDefinitions": {
    "Bearer": {
      "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "paths": {
    "/api/users/{user_id}/roles/{role_id}": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Assign role to user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "409": {
            "description": "Role already assigned to user"
          },
          "404": {
            "description": "User or role not found"
          },
          "403": {
            "description": "Forbidden - requires roles:assign permission"
          },
          "401": {
            "description": "Unauthorized"
          },
          "201": {
            "description": "Role assigned successfully"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "user_id",
            "in": "path",
            "description": "User ID"
          },
          {
            "type": "string",
            "required": true,
            "name": "role_id",
            "in": "path",
            "description": "Role ID"
          },
          {
            "schema": {
              "$ref": "#/definitions/AssignmentNotes"
            },
            "required": false,
            "name": "body",
            "in": "body",
            "description": "Assignment notes"
          }
        ],
        "operationId": "RephiWeb.RoleController.assign_to_user",
        "description": "Assigns a role to a specific user",
        "consumes": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "Role"
        ],
        "summary": "Remove role from user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "404": {
            "description": "User or role not found"
          },
          "403": {
            "description": "Forbidden - requires roles:assign permission"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "Role removed successfully"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "user_id",
            "in": "path",
            "description": "User ID"
          },
          {
            "type": "string",
            "required": true,
            "name": "role_id",
            "in": "path",
            "description": "Role ID"
          }
        ],
        "operationId": "RephiWeb.RoleController.remove_from_user",
        "description": "Removes a role from a specific user"
      }
    },
    "/api/users/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "responses": {
          "422": {
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            },
            "description": "Validation errors"
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            },
            "description": "User created successfully"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/UserRegistration"
            },
            "required": true,
            "name": "user",
            "in": "body",
            "description": "User registration details"
          }
        ],
        "operationId": "RephiWeb.AuthController.register",
        "description": "Creates a new user account and returns authentication token",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/api/users/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "responses": {
          "401": {
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "description": "Invalid credentials"
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            },
            "description": "Login successful"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/LoginCredentials"
            },
            "required": true,
            "name": "credentials",
            "in": "body",
            "description": "Login credentials"
          }
        ],
        "operationId": "RephiWeb.AuthController.login",
        "description": "Authenticates user credentials and returns authentication token",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/api/roles/{role_id}/permissions/{permission_id}": {
      "post": {
        "tags": [
          "Permission"
        ],
        "summary": "Assign permission to role",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "409": {
            "description": "Permission already assigned to role"
          },
          "404": {
            "description": "Role or permission not found"
          },
          "403": {
            "description": "Forbidden - requires permissions:assign permission"
          },
          "401": {
            "description": "Unauthorized"
          },
          "201": {
            "description": "Permission assigned successfully"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "role_id",
            "in": "path",
            "description": "Role ID"
          },
          {
            "type": "string",
            "required": true,
            "name": "permission_id",
            "in": "path",
            "description": "Permission ID"
          },
          {
            "schema": {
              "$ref": "#/definitions/AssignmentNotes"
            },
            "required": false,
            "name": "body",
            "in": "body",
            "description": "Assignment notes"
          }
        ],
        "operationId": "RephiWeb.PermissionController.assign_to_role",
        "description": "Assigns a permission to a specific role",
        "consumes": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "Permission"
        ],
        "summary": "Remove permission from role",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "404": {
            "description": "Role or permission not found"
          },
          "403": {
            "description": "Forbidden - requires permissions:assign permission"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "Permission removed successfully"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "role_id",
            "in": "path",
            "description": "Role ID"
          },
          {
            "type": "string",
            "required": true,
            "name": "permission_id",
            "in": "path",
            "description": "Permission ID"
          }
        ],
        "operationId": "RephiWeb.PermissionController.remove_from_role",
        "description": "Removes a permission from a specific role"
      }
    },
    "/api/roles/{id}": {
      "put": {
        "tags": [
          "Role"
        ],
        "summary": "Update a role",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "422": {
            "description": "Validation errors"
          },
          "404": {
            "description": "Role not found"
          },
          "403": {
            "description": "Forbidden - requires roles:edit permission"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad request"
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/RoleDetailResponse"
            },
            "description": "Role updated successfully"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Role ID"
          },
          {
            "schema": {
              "$ref": "#/definitions/RoleInput"
            },
            "required": true,
            "name": "role",
            "in": "body",
            "description": "Updated role details"
          }
        ],
        "operationId": "RephiWeb.RoleController.update",
        "description": "Updates an existing role",
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Get role details",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "404": {
            "description": "Role not found"
          },
          "403": {
            "description": "Forbidden - requires roles:view permission"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/RoleDetailResponse"
            },
            "description": "Success"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Role ID"
          }
        ],
        "operationId": "RephiWeb.RoleController.show",
        "description": "Returns detailed information about a specific role including its permissions"
      },
      "delete": {
        "tags": [
          "Role"
        ],
        "summary": "Delete a role",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "404": {
            "description": "Role not found"
          },
          "403": {
            "description": "Forbidden - requires roles:delete permission"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "Role deleted successfully"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Role ID"
          }
        ],
        "operationId": "RephiWeb.RoleController.delete",
        "description": "Deletes a role from the system"
      }
    },
    "/api/roles": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Create a new role",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "422": {
            "description": "Validation errors"
          },
          "403": {
            "description": "Forbidden - requires roles:create permission"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad request"
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/RoleDetailResponse"
            },
            "description": "Role created successfully"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/RoleInput"
            },
            "required": true,
            "name": "role",
            "in": "body",
            "description": "Role details"
          }
        ],
        "operationId": "RephiWeb.RoleController.create",
        "description": "Creates a new role in the system",
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "List all roles",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden - requires roles:view permission"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/RolesResponse"
            },
            "description": "Success"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "operationId": "RephiWeb.RoleController.index",
        "description": "Returns a list of all available roles in the system"
      }
    },
    "/api/permissions/{id}": {
      "put": {
        "tags": [
          "Permission"
        ],
        "summary": "Update a permission",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "422": {
            "description": "Validation errors"
          },
          "404": {
            "description": "Permission not found"
          },
          "403": {
            "description": "Forbidden - requires permissions:edit permission"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad request"
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/PermissionResponse"
            },
            "description": "Permission updated successfully"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Permission ID"
          },
          {
            "schema": {
              "$ref": "#/definitions/PermissionInput"
            },
            "required": true,
            "name": "permission",
            "in": "body",
            "description": "Updated permission details"
          }
        ],
        "operationId": "RephiWeb.PermissionController.update",
        "description": "Updates an existing permission",
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "Get permission details",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "404": {
            "description": "Permission not found"
          },
          "403": {
            "description": "Forbidden - requires permissions:view permission"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/PermissionResponse"
            },
            "description": "Success"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Permission ID"
          }
        ],
        "operationId": "RephiWeb.PermissionController.show",
        "description": "Returns detailed information about a specific permission"
      },
      "delete": {
        "tags": [
          "Permission"
        ],
        "summary": "Delete a permission",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "404": {
            "description": "Permission not found"
          },
          "403": {
            "description": "Forbidden - requires permissions:delete permission"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "Permission deleted successfully"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Permission ID"
          }
        ],
        "operationId": "RephiWeb.PermissionController.delete",
        "description": "Deletes a permission from the system"
      }
    },
    "/api/permissions": {
      "post": {
        "tags": [
          "Permission"
        ],
        "summary": "Create a new permission",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "422": {
            "description": "Validation errors"
          },
          "403": {
            "description": "Forbidden - requires permissions:create permission"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad request"
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/PermissionResponse"
            },
            "description": "Permission created successfully"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/PermissionInput"
            },
            "required": true,
            "name": "permission",
            "in": "body",
            "description": "Permission details"
          }
        ],
        "operationId": "RephiWeb.PermissionController.create",
        "description": "Creates a new permission in the system",
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "List all permissions",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden - requires permissions:view permission"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/PermissionsResponse"
            },
            "description": "Success"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "operationId": "RephiWeb.PermissionController.index",
        "description": "Returns a list of all available permissions in the system"
      }
    },
    "/api/notifications/broadcast": {
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Broadcast notification to all connected users",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "422": {
            "description": "Unprocessable Entity"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/NotificationResponse"
            },
            "description": "Success"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/NotificationRequest"
            },
            "required": true,
            "name": "body",
            "in": "body",
            "description": "Notification data"
          }
        ],
        "operationId": "RephiWeb.NotificationController.broadcast",
        "description": "Sends a notification message to all users connected via WebSocket"
      }
    },
    "/api/me": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get current user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/UserResponse"
            },
            "description": "User information"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "operationId": "RephiWeb.AuthController.me",
        "description": "Returns the current authenticated user's information"
      }
    }
  },
  "definitions": {
    "NotificationResponse": {
      "example": {
        "notification": {
          "timestamp": "2024-01-01T12:00:00Z",
          "message": "This is a test notification"
        },
        "message": "Notification sent successfully"
      },
      "properties": {
        "notification": {
          "properties": {
            "timestamp": {
              "description": "Timestamp",
              "format": "datetime",
              "type": "string"
            },
            "message": {
              "description": "Notification message",
              "type": "string"
            }
          },
          "type": "object"
        },
        "message": {
          "description": "Success message",
          "type": "string"
        }
      },
      "title": "Notification Response",
      "description": "Notification broadcast response",
      "type": "object"
    },
    "NotificationRequest": {
      "example": {
        "message": "This is a test notification"
      },
      "properties": {
        "message": {
          "description": "Notification message",
          "type": "string"
        }
      },
      "required": [
        "message"
      ],
      "title": "Notification Request",
      "description": "Notification broadcast request",
      "type": "object"
    },
    "ValidationErrors": {
      "example": {
        "errors": {
          "email": [
            "can't be blank"
          ],
          "password": [
            "should be at least 8 character(s)"
          ]
        }
      },
      "properties": {
        "errors": {
          "description": "Validation error messages",
          "type": "object"
        }
      },
      "required": [
        "errors"
      ],
      "title": "Validation Errors",
      "description": "Validation error response",
      "type": "object"
    },
    "UserRegistration": {
      "example": {
        "email": "user@example.com",
        "password": "securepassword123"
      },
      "properties": {
        "email": {
          "description": "User's email address",
          "format": "email",
          "type": "string"
        },
        "password": {
          "minLength": 8,
          "description": "User's password",
          "type": "string"
        }
      },
      "required": [
        "email",
        "password"
      ],
      "title": "User Registration",
      "description": "New user registration data",
      "type": "object"
    },
    "UserResponse": {
      "example": {
        "user": {
          "email": "user@example.com",
          "id": 1
        }
      },
      "properties": {
        "user": {
          "properties": {
            "email": {
              "description": "User's email address",
              "type": "string"
            },
            "id": {
              "description": "User ID",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "user"
      ],
      "title": "User Response",
      "description": "User information response",
      "type": "object"
    },
    "ErrorResponse": {
      "example": {
        "error": "Invalid email or password"
      },
      "properties": {
        "error": {
          "description": "Error message",
          "type": "string"
        }
      },
      "required": [
        "error"
      ],
      "title": "Error Response",
      "description": "Error response",
      "type": "object"
    },
    "AuthResponse": {
      "example": {
        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
        "user": {
          "email": "user@example.com",
          "id": 1
        }
      },
      "properties": {
        "token": {
          "description": "JWT authentication token",
          "type": "string"
        },
        "user": {
          "properties": {
            "email": {
              "description": "User's email address",
              "type": "string"
            },
            "id": {
              "description": "User ID",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "user",
        "token"
      ],
      "title": "Authentication Response",
      "description": "Successful authentication response",
      "type": "object"
    },
    "LoginCredentials": {
      "example": {
        "email": "user@example.com",
        "password": "securepassword123"
      },
      "properties": {
        "email": {
          "description": "User's email address",
          "format": "email",
          "type": "string"
        },
        "password": {
          "description": "User's password",
          "type": "string"
        }
      },
      "required": [
        "email",
        "password"
      ],
      "title": "Login Credentials",
      "description": "User login credentials",
      "type": "object"
    },
    "AssignmentNotes": {
      "example": {
        "notes": "Granted for project management tasks"
      },
      "properties": {
        "notes": {
          "description": "Assignment notes",
          "type": "string"
        }
      },
      "title": "Assignment Notes",
      "description": "Optional notes for permission/role assignment",
      "type": "object"
    },
    "PermissionInput": {
      "example": {
        "slug": "reports:create",
        "category": "reports",
        "description": "Allows creating new reports",
        "name": "Create Reports"
      },
      "properties": {
        "parent_id": {
          "nullable": true,
          "description": "Parent permission ID",
          "type": "integer"
        },
        "slug": {
          "description": "Permission slug (unique identifier)",
          "type": "string"
        },
        "category": {
          "description": "Permission category",
          "type": "string"
        },
        "description": {
          "description": "Permission description",
          "type": "string"
        },
        "name": {
          "description": "Permission display name",
          "type": "string"
        }
      },
      "required": [
        "name",
        "slug"
      ],
      "title": "Permission Input",
      "description": "Permission creation/update data",
      "type": "object"
    },
    "RoleInput": {
      "example": {
        "slug": "content_editor",
        "description": "Can create and edit content",
        "name": "Content Editor"
      },
      "properties": {
        "parent_id": {
          "nullable": true,
          "description": "Parent role ID for hierarchy",
          "type": "integer"
        },
        "slug": {
          "description": "Role slug (unique identifier)",
          "type": "string"
        },
        "description": {
          "description": "Role description",
          "type": "string"
        },
        "name": {
          "description": "Role display name",
          "type": "string"
        }
      },
      "required": [
        "name",
        "slug"
      ],
      "title": "Role Input",
      "description": "Role creation/update data",
      "type": "object"
    },
    "PermissionResponse": {
      "properties": {
        "data": {
          "x-nullable": null,
          "uniqueItems": null,
          "multipleOf": null,
          "minimum": null,
          "minProperties": null,
          "minLength": null,
          "minItems": null,
          "maxProperties": null,
          "maxLength": null,
          "maxItems": null,
          "exclusiveMinimum": null,
          "exclusiveMaximum": null,
          "discriminator": null,
          "$ref": "#/definitions/Permission",
          "allOf": null,
          "additionalProperties": null,
          "example": null,
          "properties": null,
          "required": null,
          "items": null,
          "pattern": null,
          "title": null,
          "description": null,
          "enum": null,
          "format": null,
          "type": null,
          "maximum": null,
          "default": null
        }
      },
      "required": [
        "data"
      ],
      "title": "Permission Response",
      "description": "Single permission response",
      "type": "object"
    },
    "RoleDetailResponse": {
      "example": {
        "data": {
          "role": {
            "slug": "manager",
            "description": "Manages teams and resources",
            "name": "Manager",
            "id": 1
          },
          "permissions": [
            {
              "slug": "users:view",
              "category": "users",
              "name": "View Users",
              "id": 1
            },
            {
              "slug": "users:create",
              "category": "users",
              "name": "Create Users",
              "id": 2
            }
          ]
        }
      },
      "properties": {
        "data": {
          "properties": {
            "role": {
              "x-nullable": null,
              "uniqueItems": null,
              "multipleOf": null,
              "minimum": null,
              "minProperties": null,
              "minLength": null,
              "minItems": null,
              "maxProperties": null,
              "maxLength": null,
              "maxItems": null,
              "exclusiveMinimum": null,
              "exclusiveMaximum": null,
              "discriminator": null,
              "$ref": "#/definitions/Role",
              "allOf": null,
              "additionalProperties": null,
              "example": null,
              "properties": null,
              "required": null,
              "items": null,
              "pattern": null,
              "title": null,
              "description": null,
              "enum": null,
              "format": null,
              "type": null,
              "maximum": null,
              "default": null
            },
            "permissions": {
              "items": {
                "x-nullable": null,
                "uniqueItems": null,
                "multipleOf": null,
                "minimum": null,
                "minProperties": null,
                "minLength": null,
                "minItems": null,
                "maxProperties": null,
                "maxLength": null,
                "maxItems": null,
                "exclusiveMinimum": null,
                "exclusiveMaximum": null,
                "discriminator": null,
                "$ref": "#/definitions/Permission",
                "allOf": null,
                "additionalProperties": null,
                "example": null,
                "properties": null,
                "required": null,
                "items": null,
                "pattern": null,
                "title": null,
                "description": null,
                "enum": null,
                "format": null,
                "type": null,
                "maximum": null,
                "default": null
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "data"
      ],
      "title": "Role Detail Response",
      "description": "Role with permissions",
      "type": "object"
    },
    "RolesResponse": {
      "properties": {
        "data": {
          "items": {
            "x-nullable": null,
            "uniqueItems": null,
            "multipleOf": null,
            "minimum": null,
            "minProperties": null,
            "minLength": null,
            "minItems": null,
            "maxProperties": null,
            "maxLength": null,
            "maxItems": null,
            "exclusiveMinimum": null,
            "exclusiveMaximum": null,
            "discriminator": null,
            "$ref": "#/definitions/Role",
            "allOf": null,
            "additionalProperties": null,
            "example": null,
            "properties": null,
            "required": null,
            "items": null,
            "pattern": null,
            "title": null,
            "description": null,
            "enum": null,
            "format": null,
            "type": null,
            "maximum": null,
            "default": null
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "title": "Roles Response",
      "description": "List of roles",
      "type": "object"
    },
    "PermissionsResponse": {
      "properties": {
        "data": {
          "items": {
            "x-nullable": null,
            "uniqueItems": null,
            "multipleOf": null,
            "minimum": null,
            "minProperties": null,
            "minLength": null,
            "minItems": null,
            "maxProperties": null,
            "maxLength": null,
            "maxItems": null,
            "exclusiveMinimum": null,
            "exclusiveMaximum": null,
            "discriminator": null,
            "$ref": "#/definitions/Permission",
            "allOf": null,
            "additionalProperties": null,
            "example": null,
            "properties": null,
            "required": null,
            "items": null,
            "pattern": null,
            "title": null,
            "description": null,
            "enum": null,
            "format": null,
            "type": null,
            "maximum": null,
            "default": null
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "title": "Permissions Response",
      "description": "List of permissions",
      "type": "object"
    },
    "Permission": {
      "example": {
        "updated_at": "2025-01-03T10:00:00Z",
        "inserted_at": "2025-01-03T10:00:00Z",
        "parent_id": null,
        "slug": "users:view",
        "category": "users",
        "description": "Allows viewing user profiles and listings",
        "name": "View Users",
        "id": 1
      },
      "properties": {
        "updated_at": {
          "description": "Last update timestamp",
          "format": "datetime",
          "type": "string"
        },
        "inserted_at": {
          "description": "Creation timestamp",
          "format": "datetime",
          "type": "string"
        },
        "parent_id": {
          "nullable": true,
          "description": "Parent permission ID",
          "type": "integer"
        },
        "slug": {
          "description": "Permission slug (unique identifier)",
          "type": "string"
        },
        "category": {
          "description": "Permission category",
          "type": "string"
        },
        "description": {
          "description": "Permission description",
          "type": "string"
        },
        "name": {
          "description": "Permission display name",
          "type": "string"
        },
        "id": {
          "description": "Permission ID",
          "type": "integer"
        }
      },
      "required": [
        "id",
        "name",
        "slug"
      ],
      "title": "Permission",
      "description": "Permission details",
      "type": "object"
    },
    "Role": {
      "example": {
        "updated_at": "2025-01-03T10:00:00Z",
        "inserted_at": "2025-01-03T10:00:00Z",
        "parent_id": null,
        "slug": "manager",
        "description": "Manages teams and resources",
        "name": "Manager",
        "id": 1
      },
      "properties": {
        "updated_at": {
          "description": "Last update timestamp",
          "format": "datetime",
          "type": "string"
        },
        "inserted_at": {
          "description": "Creation timestamp",
          "format": "datetime",
          "type": "string"
        },
        "parent_id": {
          "nullable": true,
          "description": "Parent role ID for hierarchy",
          "type": "integer"
        },
        "slug": {
          "description": "Role slug (unique identifier)",
          "type": "string"
        },
        "description": {
          "description": "Role description",
          "type": "string"
        },
        "name": {
          "description": "Role display name",
          "type": "string"
        },
        "id": {
          "description": "Role ID",
          "type": "integer"
        }
      },
      "required": [
        "id",
        "name",
        "slug"
      ],
      "title": "Role",
      "description": "Role details",
      "type": "object"
    }
  },
  "host": "localhost:4000",
  "info": {
    "title": "Rephi API",
    "description": "Phoenix/Elixir backend with JWT authentication and real-time WebSocket communication",
    "version": "1.0"
  }
}